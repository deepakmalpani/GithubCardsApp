import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
// import "@/styles/Home.module.scss"
import React, { ChangeEvent, FormEvent } from 'react'
import { StringMappingType } from 'typescript'
import App from 'next/app'
import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })

// export default function Home() {
//   return (
//     <>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <main className={styles.main}>
//         <div className={styles.description}>
//           <p>
//             Get started by editing&nbsp;
//             <code className={styles.code}>src/pages/index.tsx</code>
//           </p>
//           <div>
//             <a
//               href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//               target="_blank"
//               rel="noopener noreferrer"
//             >
//               By{' '}
//               <Image
//                 src="/vercel.svg"
//                 alt="Vercel Logo"
//                 className={styles.vercelLogo}
//                 width={100}
//                 height={24}
//                 priority
//               />
//             </a>
//           </div>
//         </div>

//         <div className={styles.center}>
//           <Image
//             className={styles.logo}
//             src="/next.svg"
//             alt="Next.js Logo"
//             width={180}
//             height={37}
//             priority
//           />
//           <div className={styles.thirteen}>
//             <Image
//               src="/thirteen.svg"
//               alt="13"
//               width={40}
//               height={31}
//               priority
//             />
//           </div>
//         </div>

//         <div className={styles.grid}>
//           <a
//             href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Docs <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Find in-depth information about Next.js features and&nbsp;API.
//             </p>
//           </a>

//           <a
//             href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Learn <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Learn about Next.js in an interactive course with&nbsp;quizzes!
//             </p>
//           </a>

//           <a
//             href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Templates <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Discover and deploy boilerplate example Next.js&nbsp;projects.
//             </p>
//           </a>

//           <a
//             href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <h2 className={inter.className}>
//               Deploy <span>-&gt;</span>
//             </h2>
//             <p className={inter.className}>
//               Instantly deploy your Next.js site to a shareable URL
//               with&nbsp;Vercel.
//             </p>
//           </a>
//         </div>
//       </main>
//     </>
//   )
// }


// function HomePage() {
//   return <div>Welcome to Next.js!</div>
// }
interface Profile {
  name: string;
  avatar_url: string;
  company: string;
}

const CardList = (props : { profiles : Profile[]}) => (
	<div>
  	{props.profiles.map(profile => <Card {...profile} key = ""/>)} 
	</div>
);

class Card extends React.Component<Profile>{
  render() { 
    const profile = this.props;
    return(
      <div className={styles.githubprofile}>
    	  <img src ={ profile.avatar_url} className = {styles.img}/>
        <div className={styles.info}>
          <div className={styles.name}>{profile.name}</div>
          <div className={styles.company}>{profile.company}</div>
        </div>
    	</div>
  );
  }
}

interface FormProps {
  onSubmit : (profileData : Profile) => void; // type definition for arrow type prop
}

interface FormState {
  username : string
}

class Form extends React.Component<FormProps, FormState>{
  state = { username : ""};
  handleSubmit = async (event : FormEvent<HTMLFormElement>) => {
      event.preventDefault(); // prevents default reloading of page after submitting a form
      const resp = await axios.get(`https://api.github.com/users/${this.state.username}`); // AJAX call to fetch data from API
      this.props.onSubmit(resp.data);
      this.setState({ username : ''}); //clearing user input
  };

  handleInputChange = (event : ChangeEvent<HTMLInputElement>) =>{
      this.setState( { username : event.target.value});
  };
  render(): React.ReactNode {
    return(
      <form onSubmit = {this.handleSubmit} className={styles.form} >
      <input
      type="text"
      value={this.state.username} // making React aware of the changes in value of DOM (optional)
      onChange={this.handleInputChange}
      placeholder="GitHub username"
      required
    />
        <button>Add card</button>
      </form>
    );
  }
}

interface HomePageState{
  profiles : Profile[];
}

class HomePage extends React.Component<{title : string}, HomePageState>{
  state : HomePageState = {  
    profiles : [] //new way of declaring state in constructors in JS
  }
  addNewProfile = (profileData : Profile)=>{ //function which will handle appending data to "profiles" array
    this.setState( prevState => ({
      profiles : [...prevState.profiles, profileData], 
    }))
  }
  render() {
    return (
    <div>
      <div className = {styles.header}> {this.props.title}</div>
      <Form onSubmit = {this.addNewProfile} />
      <CardList profiles={this.state.profiles} />  {/* Passing value of testData using props */}
      </div>
    );
  }
}


export default HomePage

